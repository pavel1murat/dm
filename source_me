#!/usr/bin/bash

function cleanup() {
    
    export PATH=$(echo $PATH | sed -r 's!'${TFM_DIR}/bin':*!!')

    unset TFM_LOGDIR
    unset TFM_LOGFILE
    unset TFM_USER_SOURCEFILE_ERRNO
    unset TFM_STANDARD_SOURCEFILE_SOURCED
    unset TFM_TTY
    unset TFM_PORT
}

if [[ -n $TFM_STANDARD_SOURCEFILE_SOURCED ]]; then
   echo "already sourced. do nothing"
   return 1
fi

if [ -n $TFM_VERSION ] ; then echo TFM_VERSION=$TFM_VERSION
                         else echo "TFM not setup, bail out" ; return 1
fi

export TFM_TTY=$(tty | sed -r 's!/dev/!!')

if ! [[ "$TFM_TTY" =~ pts/[0-9]+ ]]; then
    cat<<EOF >&2
WARNING: unable to determine tty. While this will not affect
actual datataking, any DAQInterface launched in this environment
may have problems with sending output to a MessageViewer instance
EOF
fi

if [ -z $TFM_BASE_PORT           ] ; then export TFM_BASE_PORT=10000          ; fi
if [ -z $TFM_PORTS_PER_PARTITION ] ; then export TFM_PORTS_PER_PARTITION=1000 ; fi

export PATH=$TFM_DIR/bin:$PATH

if [[ -n $TFM_USER_SOURCEFILE ]]; then

   if [[ "$TFM_USER_SOURCEFILE" != "IGNORED" && -e $TFM_USER_SOURCEFILE ]]; then
       user_sourcefile_owner=$( ls -l $TFM_USER_SOURCEFILE | awk '{print $3}' )

       if [[ "$user_sourcefile_owner" == "$USER" ]]; then
       	  . $TFM_USER_SOURCEFILE
       else

cat<<heredoc

	   ERROR: Current user "$USER" is not the same as the owner of
           ${TFM_USER_SOURCEFILE}; source of
           $TFM_USER_SOURCEFILE will not take place

heredoc

           cleanup
           return 1

       fi
   elif [[ "$TFM_USER_SOURCEFILE" != "IGNORED" && ! -e $TFM_USER_SOURCEFILE ]]; then

cat<<heredoc

	ERROR: TFM_USER_SOURCEFILE environment variable has been
	set, but the would-be sourcefile it refers to,
	"$TFM_USER_SOURCEFILE", doesn't exist. 

heredoc

        cleanup
	return 1
   else   # $TFM_USER_SOURCEFILE == IGNORED, so we don't source a user-defined script

cat<<EOF

       ERROR: TFM_USER_SOURCEFILE environment variable has
       been set to "IGNORED"; while previously this meant that this
       script would not source a user-defined script referred to by
       the TFM_USER_SOURCEFILE variable, this option is now
       deprecated

EOF
         cleanup
	 return 1
   fi

else

cat<<heredoc

	ERROR: the TFM_USER_SOURCEFILE environment variable
	must be set, either to the name of the user-defined sourcefile
	you wish to have sourced, or to "IGNORED" if you don't want to
	source a user-defined sourcefile

heredoc

   cleanup
   return 1
fi

if [[ -z $TFM_USER_SOURCEFILE_ERRNO ]] ; then
    
cat<<heredoc

      ERROR: the TFM_USER_SOURCEFILE_ERRNO environment
      variable doesn't exist; this needs to be set in the user script
      referred to by the TFM_USER_SOURCEFILE environment
      variable. Setting the variable to "0" in
      $TFM_USER_SOURCEFILE implies success, anything else
      implies a failure and this script will consequently *not* set up
      the DAQInterface environment.

heredoc

    cleanup
    return 1

elif [[ "$TFM_USER_SOURCEFILE_ERRNO" != "0" ]] ; then

cat<<heredoc

      ERROR: the TFM_USER_SOURCEFILE_ERRNO environment
      variable was set by the user-defined source script
      "$TFM_USER_SOURCEFILE" with a value of
      $TFM_USER_SOURCEFILE_ERRNO; anything nonzero is considered to be an error.
heredoc

     cleanup
     return 1
fi

if [[ -n $TFM_SETTINGS ]]; then
    
    if [[ ! -e $TFM_SETTINGS ]]; then

	echo "ERROR: the TFM_SETTINGS environment variable doesn't point to a file which exists"
	cleanup
	return 1
    fi

    export TFM_SETUP_FHICLCPP=$( dirname $TFM_SETTINGS )/.setup_fhiclcpp
else

    cat<<EOF

ERROR: the environment variable TFM_SETTINGS hasn't been
defined in $TFM_USER_SOURCEFILE. Please read the DAQInterface
Manual at
https://cdcvs.fnal.gov/redmine/projects/artdaq-utilities/wiki/Artdaq-daqinterface
to learn how to properly set up the DAQInterface environment.

EOF

cleanup
return 1
fi



# At this point, set various environment variables DAQInterface needs
# to reasonable defaults if they weren't already set in
# $TFM_USER_SOURCEFILE - or complain if there's no reasonable
# default

if [[ -z $TFM_PARTITION_NUMBER ]]; then
   export TFM_PARTITION_NUMBER=0
fi

if [[ -z $TFM_PROCESS_MANAGEMENT_METHOD ]]; then
   export TFM_PROCESS_MANAGEMENT_METHOD="direct"
fi

if [[ -z $TFM_KNOWN_BOARDREADERS_LIST ]]; then
    cat<<EOF

ERROR: the environment variable TFM_KNOWN_BOARDREADERS_LIST
hasn't been defined in $TFM_USER_SOURCEFILE. Please read the
DAQInterface Manual at
https://cdcvs.fnal.gov/redmine/projects/artdaq-utilities/wiki/Artdaq-daqinterface
to learn how to properly set up the DAQInterface environment.

EOF

cleanup
return 1

elif [[ ! -e $TFM_KNOWN_BOARDREADERS_LIST ]]; then

    echo "ERROR: the TFM_KNOWN_BOARDREADERS_LIST environment variable doesn't point to a file which exists"
    cleanup
    return 1
fi

if [[ -z $TFM_FHICL_DIRECTORY ]]; then

    export TFM_FHICL_DIRECTORY="$PWD/simple_test_config"

    cat<<EOF

WARNING: the environment variable TFM_FHICL_DIRECTORY hasn't
been defined in $TFM_USER_SOURCEFILE, so we're going to
assume the default configuration area is $TFM_FHICL_DIRECTORY
EOF
fi

if [[ ! -e "$TFM_FHICL_DIRECTORY" && "$TFM_FHICL_DIRECTORY" != "IGNORED" ]]; then

cat<<EOF

ERROR: unable to find the FHiCL directory referred to by the
TFM_FHICL_DIRECTORY environment variable,
$TFM_FHICL_DIRECTORY
EOF

cleanup
return 1
fi

if [[ -z $TFM_LOGDIR ]]; then export TFM_LOGDIR=/tmp/tfm_${USER} ; fi

mkdir -p $TFM_LOGDIR
#------------------------------------------------------------------------------
# assume 100 partitions is enough
#------------------------------------------------------------------------------
export TFM_LOGFILE=$TFM_LOGDIR/partition_`printf "%02i" $TFM_PARTITION_NUMBER`.log

cat<<EOF
* The command was successful
* To launch, just type "DAQInterface &" (excluding quotes, ampersand optional)
* Output will be logged in ${TFM_LOGDIR}/DAQInterface_partition<N>.log, where <N> 
  is the partition the DAQInterface instance is on
* You're encouraged to read the DAQInterface Manual at https://cdcvs.fnal.gov/redmine/projects/artdaq-utilities/wiki/Artdaq-daqinterface
EOF
 
echo

export TFM_STANDARD_SOURCEFILE_SOURCED=true

return 0
