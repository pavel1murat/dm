# -*- mode:tcl -*- 
# Produced from 'fhicl-dump' using:
#   Input  : ./datalogger01.fcl
#   Policy : cet::filepath_maker
#   Path   : "FHICL_FILE_PATH"

daq: {
    aggregator: {
        auto_suppression_enabled: false
        buffer_count: 40
        max_event_size_bytes: 1024000   
        event_queue_depth: 40
        event_queue_wait_time: 5
        expected_events_per_bunch: 1
        is_data_logger: true
        onmon_event_prescale: 1
        print_event_store_stats: true
        routing_token_config: {
            use_routing_manager: false
        }
      
        sources: {      
            s2: { 
                transferPluginType     : Autodetect 
                source_rank            : 2 
                max_fragment_size_words: 128000 
                host_map               : [
                                          {rank: 0 host: "mu2edaq09"}, 
                                          {rank: 1 host: "mu2edaq09"}, 
                                          {rank: 2 host: "mu2edaq09"}, 
                                          {rank: 3 host: "mu2edaq09"}, 
                                          {rank: 4 host: "mu2edaq09"}, 
                                          {rank: 5 host: "mu2edaq09"}
                                         ] 
            }
            s3: { 
                transferPluginType     : Autodetect 
                source_rank            : 3 
                max_fragment_size_words: 128000  
            }
        } 
    }

    metrics: {
        aggFile: {
            absolute_file_path: false
            fileName          : "aggregator/agg_%UID%_metrics.log"
            level             : 4
            metricPluginType  : "file"
            uniquify          : true
        }
    }
}

outputs: {
    normalOutput: {
        compressionLevel: 501
        fastCloning: false
        fileName: "/tmp/artdaqdemo_r%06r_sr%02s_%to_%#_dl1.root"
        fileProperties: {
            maxRuns   : 1
            maxSubRuns: 1
        }
        module_type: "RootDAQOut"
    }
    rootNetOutput: {
        broadcast_sends: true
      
        destinations: { 
            d5: { 
                transferPluginType     : Autodetect 
                destination_rank       : 5 
                max_fragment_size_words: 128000 
                host_map               : [
                                          {rank: 0 host: "mu2edaq09"}, 
                                          {rank: 1 host: "mu2edaq09"}, 
                                          {rank: 2 host: "mu2edaq09"}, 
                                          {rank: 3 host: "mu2edaq09"}, 
                                          {rank: 4 host: "mu2edaq09"}, 
                                          {rank: 5 host: "mu2edaq09"}
                                         ] 
            }
        }

        module_type      : "RootNetOutput"
        nonblocking_sends: true
    }
}

physics: {
    a1: [
         "checkintegrity",
         "checkintegrity2"
        ]
    analyzers: {
        checkintegrity: {
            frag_type: "TOY1"
            module_type: "CheckIntegrity"
            raw_data_label: "daq"
        }
        checkintegrity2: {
            frag_type: "TOY2"
            module_type: "CheckIntegrity"
            raw_data_label: "daq"
        }
    }
    my_mpi_output_modules: [ "rootNetOutput" ]
    my_output_modules    : [ "normalOutput"  ]

    p2: [   "BuildInfo" ]

    producers: {
        BuildInfo: {
            instance_name: "ArtdaqDemo"
            module_type: "ArtdaqDemoBuildInfo"
        }
    }
}

process_name: "DAQDL"

services: {
    ArtdaqSharedMemoryServiceInterface: {
        service_provider: "ArtdaqSharedMemoryService"
    }
}

source: {
    module_type            : "ArtdaqInput"
    register_fragment_types: false
}
