BEGIN_PROLOG

windowModeBR_daq_standard: {
  fragment_receiver: {
    sleep_on_stop_us: 500000 
    fragment_id: 101
    board_id: 1

    request_mode: "Window" # Possible values are: Ignored, Single, Buffer, Window
    end_of_run_quiet_timeout_ms: 1000 # Time, in milliseconds, that the entire system must be quiet for check_stop to return true in request mode. 

    data_buffer_depth_fragments: 1000
    data_buffer_depth_mb: 1000

    receive_requests: true
    request_port: 3001
    request_address: "227.128.12.26" # Multicast request address

    request_window_offset: 0 # Request message contains tzero. Window will be from tzero - offset to tz-o + width
    request_window_width: 0
    stale_request_timeout: "0xFFFFFFFF" # How long to wait before discarding request messages that are outside the available data
    request_windows_are_unique: true # If request windows are unique, avoids a copy operation, but the same data point cannot be used for two requests. If this is not anticipated, leave set to "true"

    separate_data_thread: true # MUST be true for requests to be applied! If requesting is not desired, but a separate readout thread is, set this to true, requests_enabled to false and request_mode to ignored.

    separate_monitoring_thread: false # Whether a thread should be started which periodically calls checkHWStatus_, a user-defined function which should be used to check hardware status registers and report to MetricMan.
    hardware_poll_interval_us: 0 # How often, in microseconds, checkHWStatus_() should be called. 0 to disable.

    circular_buffer_mode: true

    allow_default_round_robin_routing: false

    destinations: { }
  }

  metrics: {
    brFile: {
      metricPluginType: "file"
      level: 4
      fileName: "boardreader/br_%UID%_metrics.log"
         absolute_file_path: false
      uniquify: true
    }
  }
}

END_PROLOG
