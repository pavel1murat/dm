
services: {
  ArtdaqSharedMemoryServiceInterface: {
    service_provider: ArtdaqSharedMemoryService
  }
  ArtdaqFragmentNamingServiceInterface: { service_provider: ArtdaqFragmentNamingService helper_plugin: "ArtdaqDemo" }
}

daq: {
  event_builder: {
	expected_fragments_per_event: 1 # Will be set by DAQInterface
	use_art: true
	print_event_store_stats: true
	buffer_count: 20
	send_init_fragments: false
	verbose: false
	send_requests: false
	
	routing_token_config: {
	use_routing_manager: false
	}

	sources: {}
  }
  metrics: {
	evbFile: {
	  metricPluginType: "file"
	  level: 4
	  fileName: "eventbuilder/evb_%UID%_metrics.log"
         absolute_file_path: false
	  uniquify: true
	}
  }
} 

outputs: {
  rootNetOutput: {
    module_type: RootNetOutput
    #SelectEvents: { SelectEvents: [ pmod2,pmod3 ] }
    #broadcast_sends: true
	destinations: { }

	routing_table_config: {
	    use_routing_manager: false
	}
  }
  #normalOutput: {
  #  module_type: RootDAQOut
  #  fileName: "/tmp/artdaqdemo_eb00_r%06r_sr%02s_%to_%#.root"
  #  #SelectEvents: { SelectEvents: [ pmod2,pmod3 ] }
  #  fileProperties: { maxSubRuns: 1 maxRuns: 1 maxSize: 8192000 }
  #  compressionLevel: 501 # ZSTD
  #  fastCloning: false
 #}
}

physics: {
  analyzers: {

  }

  producers: {
  }

  filters: {

    prescaleMod2: {
       module_type: NthEvent
       nth: 2
    }

    prescaleMod3: {
       module_type: NthEvent
       nth: 3
    }
  }

  pmod2: [ prescaleMod2 ]
  pmod3: [ prescaleMod3 ]
   

  #a1: [ app, wf ]

  my_output_modules: [ rootNetOutput ]
  #my_output_modules: [ normalOutput ]
}
source: {
  module_type: ArtdaqInput
  waiting_time: 2500000
  resume_after_timeout: true
}
process_name: DAQ