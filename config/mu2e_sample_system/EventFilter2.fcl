

daq: {
  event_builder: {
	expected_fragments_per_event: 0  # Will be set by DAQInterface
	use_art: true
	print_event_store_stats: true
	buffer_count: 60
	max_incomplete_events: 75 # Same as boardreader sync interval
	verbose: true
	init_fragment_count: 0
	send_requests: false
	
    routing_token_config: {
        ## True if using the Routing Manager
        use_routing_manager: true

        ## Port to send tokens on
        routing_token_port: 35555  # default

        ## Hostname or IP of RoutingManager
        routing_manager_hostname: "localhost"  # default
   }

	sources: { }
  }
  metrics: {
	evbFile: {
	  metricPluginType: "file"
	  level: 4
	  fileName: "eventbuilder/evb_%UID%_metrics.log"
         absolute_file_path: false
	  uniquify: true
	}
  }
} 

art: {
services: {
  ArtdaqSharedMemoryServiceInterface: { service_provider: ArtdaqSharedMemoryService }
  ArtdaqFragmentNamingServiceInterface: { service_provider: ArtdaqFragmentNamingService helper_plugin: "ArtdaqDemo" }
}
outputs: {
  subsystemOutput: {
    module_type: RootNetOutput
    #SelectEvents: [ delay ] 
    #broadcast_sends: true
	destinations: {	}

	routing_table_config: {
	    use_routing_manager: false
	}
  }
  lumiOutput: {
    module_type: RootNetOutput
    #SelectEvents: [ delay ] 
    #broadcast_sends: true
	destinations: {	}

	routing_table_config: {
	    use_routing_manager: false
	}
  }
  #normalOutput: {
  #  module_type: RootDAQOut
  #  fileName: "/tmp/artdaqdemo_eb00_r%06r_sr%02s_%to_%#.root"
  #  #SelectEvents: { SelectEvents: [ pmod2,pmod3 ] }
  #  fileProperties: { maxSubRuns: 1 maxRuns: 1  }
  #  compressionLevel: 501 # ZSTD
  #  fastCloning: false
 #}
}

physics: {
  analyzers: {
    toy1Integ: {
      module_type: CheckIntegrity
      raw_data_label: "daq"
      frag_type: "TOY1"      
    }
    toy2Integ: {
      module_type: CheckIntegrity
      raw_data_label: "daq"
      frag_type: "TOY2"
    }
  }

  producers: {
  }

  filters: {
  
    randomDelay: {
		module_type: RandomDelayFilter
        minimum_delay_ms: 2
        maximum_delay_ms: 100
        mean_delay_ms: 5
        sigma_delay_ms: 2
        pass_filter_percentage: 80
        cpu_load_ration: 0.5
        distribution_type: Normal
	}
  }

  #delay: [ randomDelay ]
  a1: [ toy1Integ, toy2Integ ]
  my_output_modules: [ lumiOutput, subsystemOutput ]
  #my_output_modules: [ normalOutput ]
}
source: {
  module_type: ArtdaqInput
}
process_name: DAQEF2
}