Sample configuration: missing_requests
Notes on 26-Jun-2018, KAB

Description:
This configuration is intended to demonstrate/test the use of a system that
receives data in push mode from one BoardReader, pulls data from four others,
and has to deal with three of those pull-mode BRs getting out of sync, over time.

Some notes:
* This configuration benefits from enhanced copy of the typical boot.txt file, and a
  sample is included with this configuration.  To use this file, you should first
  edit it to replace <yourArtdaqDemoDir> with the correct path. Then,
  to run this demo, you can use the following commands:
  - 'cd <yourArtdaqDemoDir>'
  - 'sh ./run_demo.sh --config missed_requests --bootfile `pwd`/artdaq-utilities-daqinterface/simple_test_config/missed_requests/boot.txt --comps component01 component02 component03 component04 component05 --'

* NOTE that the pull-mode data requests that are used in this sample make use of 
  multicast Ethernet messages.  As such, there may
  be firewall settings that need to be tuned.  Please see the text that describes
  this in ../README.simple_test_configs.

* It is useful to watch data fragments going into the CommandableFragmentGenerator
  data buffer and being pulled out and sent to the EBs.  The following TRACE
  commands can help configure the system to provide that information:
  - <setup TRACE, if needed>
  - <'export TRACE_NAME=TRACE' to enable trace, if needed>
  - 'tonM -n <component_name>_CommandableFragmentGenerator 20' to turn on tracing to memory (viewable with 'tshow')
    -- then, 'tshow | grep CommandableFragmentGenerator | grep d20'
  - 'tonS -n <component_name>_CommandableFragmentGenerator 20' to turn on tracing to log files

* It is also useful to dump the contents of the data file(s) that are created.
  This can be done using the FHiCL file included in this directory:
  - 'art -c <path_to_this_dir>/ToyDump.fcl <raw_data_filename>
  In both the online monitor that runs ToyDump, and in the output of the command
  listed here, we expect there to be 5 "toy" fragments (of type TOY1 or TOY2) when
  the system is run with the 'run_demo' command listed above (all five components included).
  [Side note: it may be helpful to temporarily disable the limiting of high-rate TRACE/log
   messages when running this dump routine.  The best way to do that is to unset the
   TRACE env vars that are set in your current environment (e.g. 'unset TRACE_NAME').]
