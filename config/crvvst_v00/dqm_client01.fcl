# -*- mode:tcl -*- 
#------------------------------------------------------------------------------
# P.M.
# module labels can't have underscores in them....
# when running the ARTDAQ 'demo' example, at any time, can submit in a separate window 
# a DQM client (of course, setup the Mu2e online environment first): 
# 
# mu2e -c config/demo/dqm_client01.fcl
#
# the job will be just receiving events and filling a few histograms shown on two canvases:
# - http://localhost:8877/win1/
# - http://localhost:8877/win2/
#------------------------------------------------------------------------------
# #include "Offline/fcl/minimalMessageService.fcl"# 
# #include "Offline/fcl/standardProducers.fcl"
# #include "Offline/fcl/standardServices.fcl"
#------------------------------------------------------------------------------
process_name: TrackerDQM

services: {
    ArtdaqSharedMemoryServiceInterface: { service_provider: ArtdaqSharedMemoryService 
        waiting_time        : 1
        resume_after_timeout: true
    }

    ArtdaqFragmentNamingServiceInterface: { service_provider: ArtdaqFragmentNamingService helper_plugin: Mu2e}

#    message :       @local::default_message
#    GeometryService :       {
#        inputFile         : "Offline/Mu2eG4/geom/geom_common.txt"
#        bFieldFile        : "Offline/Mu2eG4/geom/bfgeom_reco_v01.txt"
#        simulatedDetector : {tool_type: "Mu2e"}
#    }
#    ConditionsService       : { conditionsfile : "Offline/ConditionsService/data/conditions_01.txt"}
#    GlobalConstantsService  : { inputFile : "Offline/GlobalConstantsService/data/globalConstants_01.txt"}
#    DbService               : @local::DbEmpty
#    ProditionsService       : @local::Proditions
    ArtdaqSharedMemoryServiceInterface      :       {service_provider : ArtdaqGlobalsService}
}

services.message: {
    destinations:{
        console:{
            filename_delimit : "/src"
            format_string    : "|%L:%N:%f [%u]\t%m"
            threshold        : "DEBUG"
            type             : "OTS"
        }

        file       : {
            type              : "GenFile"
            threshold         : "INFO"
            seperator         : "-"
            pattern           : "dqm_test-%?H%t-%p.log"
            timestamp_pattern : "%Y%m%d%H%M%S"
            directory         : "/scratch/mu2e/mu2etrk_pasha_020/demo/logs/dqm"
            append            : false
        }

#         otsConsole : {
#             filename_delimit : "/src"
#             host             : "127.0.0.1"
#             port             : 33045
#             threshold        : "DEBUG"
#             type             : "UDP"
#         }
    }
}
#------------------------------------------------------------------------------
# input
# rank uniquely identifies the ARTDAQ process
#------------------------------------------------------------------------------
TransferPluginConfig: {
    transferPluginType : TCPSocket
    host_map           : [
                          { rank:100 host: "localhost"},   ## tracker DQM - doesn't matter ?
                          { rank:  3 host: "localhost"},   ## dispatcher01
                          { rank:  2 host: "localhost"},   ## datalogger01
                          { rank:  1 host: "localhost"},   ## eventbuilder01
                          { rank:  0 host: "localhost"}    ## boardreader01
                         ]
    
    max_fragment_size_words : 1048576
    source_rank             : 3          ## dispatcher
    destination_rank        : 100        ## DQM client
}

source: {
    module_type         : TransferInput
    dispatcherHost      : "localhost"
    dispatcherPort      : 21103           ## was 10500, 21105 seems OK
    commanderPluginType : xmlrpc
    transfer_plugin     : @local::TransferPluginConfig 
#------------------------------------------------------------------------------
# dispatcher_config seems to be the part sent to the server
#------------------------------------------------------------------------------
    dispatcher_config: {
        path         : [dispatcherTransferOutput]
        filter_paths : [ ]
        unique_label : "DQMClient01"  ## this is the one to be renamed
        services: {
            ArtdaqSharedMemoryServiceInterface: { service_provider: ArtdaqSharedMemoryService 
                waiting_time        : 30
                resume_after_timeout: false
            }

            ArtdaqFragmentNamingServiceInterface: { service_provider: ArtdaqFragmentNamingService
                helper_plugin: Mu2e
            }

            ArtdaqSharedMemoryServiceInterface : { service_provider : ArtdaqSharedMemoryService }
        }

        outputs: {
            dumpOutput: { module_type : FileDumperOutput
                wantProductFriendlyClassName : true
            }

            dispatcherTransferOutput: { module_type: TransferOutput
                transfer_plugin: @local::TransferPluginConfig 
            }
        }

        physics: {
            filters: {
                prescaler: {
                    module_type    : Prescaler
                    prescaleFactor : 100
                    prescaleOffset :   0
                }
            }

            dispatcher_path        : [ prescaler ]
            out                    : [ dispatcherTransferOutput, dumpOutput ]
        }

        source: {
            module_type: ArtdaqInput
        }

        process_name: DispatcherArtJob
    }
}

#------------------------------------------------------------------------------
# overriding crap
#------------------------------------------------------------------------------
# source: { module_type : RootInput
#     fileNames: [ "/scratch/mu2e/mu2etrk_pasha_020/demo/data/artdaqdemo_r000018_sr01_20231225T162134_1_dl1.root" ]
#    # maxEvents : 1000
# }
#------------------------------------------------------------------------------
# output
#------------------------------------------------------------------------------
outputs: {
    dumpOutput: { module_type : FileDumperOutput
        wantProductFriendlyClassName : true
    }
}
#------------------------------------------------------------------------------
# job configuration
#------------------------------------------------------------------------------
physics: {
    producers: {}

    analyzers: {
#         trackerdqm: { module_type: TrackerDQM
#             port       : 6000
#             diagLevel  : 0
#             freqDQM    : 100
#             moduleTag  : "TrackerDQM" # what the heck is this ?
#             histType   : ["panels"]
#             address    : "localhost"
#         }
#------------------------------------------------------------------------------
# WFViewer is a histogrammmming module: 
#                    file:artdaq_demo/artdaq-demo/ArtModules/WFViewer_module.cc
# should be able to view its histograms on the web
#------------------------------------------------------------------------------
#         ra: { module_type: RootApplication
#             force_new    : true
#             dont_quit    : true
#         }
#  
#         wf: { module_type: WFViewer
#             prescale     : 1
#             num_x_plots  : 2
#             num_y_plots  : 1
#             fragment_ids : [0,1,2,3,4,5,6,7,8,9]
#         }

        demoViewer: { module_type: CrvVstDemoViewer
            prescale     : 2
            num_x_plots  : 2
            num_y_plots  : 1
            fragment_ids : [0,1,2,3,4,5,6,7,8,9]
        }
     }

#    p1 : [ra, wf]
    p2 : [ demoViewer ]

    end_paths : [ p2 ]

    out : [  ]
}

#------------------------------------------------------------------------------
services.TFileService.fileName : "/scratch2/mu2ecrv/mu2ecrv_mu2e_midas/demo/dqm/mu2e_crvDQM_%#.root"
services.scheduler.wantSummary : true
