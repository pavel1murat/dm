BEGIN_PROLOG

component_standard: {
    fragment_receiver: {
	# CommandableFragmentGenerator Configuration: 
	fragment_ids: []
	fragment_id: -99 # Please define only one of these

	# Generator Parameters:
	generator: ToySimulator
	fragment_type: TOY2
	fragment_id: 1
	board_id: 1
	starting_fragment_id: 1
	random_seed: 1738
	sleep_on_stop_us: 500000 

	request_mode: "Window" # Possible values are: Ignored, Single, Buffer, Window

	end_of_run_quiet_timeout_ms: 1000 # Time, in milliseconds, that the entire system must be quiet for check_stop to return true in request mode. 

	data_buffer_depth_fragments: 1000
	data_buffer_depth_mb: 1000
	
receive_requests: true
	request_port: 3001
	request_address: "227.128.12.26" # Multicast request address

	request_window_offset: 0 # Request message contains tzero. Window will be from tzero - offset to tz-o + width
	request_window_width: 0
	stale_request_timeout: "0xFFFFFFFF" # How long to wait before discarding request messages that are outside the available data
	request_windows_are_unique: true # If request windows are unique, avoids a copy operation, but the same data point cannot be used for two requests. If this is not anticipated, leave set to "true"

	separate_data_thread: true # MUST be true for requests to be applied! If requesting is not desired, but a separate readout thread is, set this to true, requests_enabled to false and request_mode to ignored.

	separate_monitoring_thread: false # Whether a thread should be started which periodically calls checkHWStatus_, a user-defined function which should be used to check hardware status registers and report to MetricMan.
hardware_poll_interval_us: 0 # How often, in microseconds, checkHWStatus_() should be called. 0 to disable.

	circular_buffer_mode: true

	nADCcounts: 500000
	max_fragment_size_bytes: 1024000

	throttle_usecs: 0
	usecs_between_sends: 200000

	distribution_type: 3

	timestamp_scale_factor: 10

	destinations: {	}

	routing_table_config: {
           ## True if using the Routing Manager
           use_routing_manager: true
       
           ## Port that table updates should arrive on
           table_update_port: 35556  # default
       
           ## Address that table updates should arrive on
           table_update_address: "227.128.12.28"  # default
       
           ## Port that acknowledgements should be sent to
          table_acknowledge_port: 35557  # default
       
           ## Host that acknowledgements should be sent to
           routing_manager_hostname: "localhost"  # default
            table_update_multicast_interface: "0.0.0.0"		   
       
           ## Time to wait (in ms) for a routing table update if the table is exhausted
           routing_timeout_ms: 2000  # default 1000
       
           ## Number of times to retry getting destination from routing table
           routing_retry_count: 5  # default
       	}
    }

    metrics: {
	brFile: {
	    metricPluginType: "file"
	    level: 4
	    fileName: "boardreader/br_%UID%_metrics.log"
         absolute_file_path: false
	    uniquify: true
	}
    }
}

component01_standard: @local::component_standard
component01_standard.fragment_receiver.fragment_type: TOY1
component01_standard.fragment_receiver.fragment_id: 0
component01_standard.fragment_receiver.board_id: 0
component01_standard.fragment_receiver.starting_fragment_id: 0
component01_standard.fragment_receiver.random_seed: 9079
component01_standard.fragment_receiver.request_mode: "Ignored"
component01_standard.fragment_receiver.separate_data_thread: false
component01_standard.fragment_receiver.nADCcounts: 2000
component01_standard.fragment_receiver.max_fragment_size_bytes: 5000
component01_standard.fragment_receiver.distribution_type: 1
component01_standard.fragment_receiver.circular_buffer_mode: false

component02_standard: @local::component_standard
component02_standard.fragment_receiver.fragment_type: TOY2
component02_standard.fragment_receiver.fragment_id: 1
component02_standard.fragment_receiver.board_id: 1
component02_standard.fragment_receiver.starting_fragment_id: 1
component02_standard.fragment_receiver.random_seed: 1738

component03_standard: @local::component_standard
component03_standard.fragment_receiver.fragment_type: TOY2
component03_standard.fragment_receiver.fragment_id: 2
component03_standard.fragment_receiver.board_id: 2
component03_standard.fragment_receiver.starting_fragment_id: 2
component03_standard.fragment_receiver.random_seed: 2738

component04_standard: @local::component_standard
component04_standard.fragment_receiver.fragment_type: TOY2
component04_standard.fragment_receiver.fragment_id: 3
component04_standard.fragment_receiver.board_id: 3
component04_standard.fragment_receiver.starting_fragment_id: 3
component04_standard.fragment_receiver.random_seed: 3738

component05_standard: @local::component_standard
component05_standard.fragment_receiver.fragment_type: TOY2
component05_standard.fragment_receiver.fragment_id: 4
component05_standard.fragment_receiver.board_id: 4
component05_standard.fragment_receiver.starting_fragment_id: 4
component05_standard.fragment_receiver.random_seed: 4738

component06_standard: @local::component_standard
component06_standard.fragment_receiver.fragment_type: TOY2
component06_standard.fragment_receiver.fragment_id: 5
component06_standard.fragment_receiver.board_id: 5
component06_standard.fragment_receiver.starting_fragment_id: 5
component06_standard.fragment_receiver.random_seed: 5738

component07_standard: @local::component_standard
component07_standard.fragment_receiver.fragment_type: TOY2
component07_standard.fragment_receiver.fragment_id: 6
component07_standard.fragment_receiver.board_id: 6
component07_standard.fragment_receiver.starting_fragment_id: 6
component07_standard.fragment_receiver.random_seed: 6738

component08_standard: @local::component_standard
component08_standard.fragment_receiver.fragment_type: TOY2
component08_standard.fragment_receiver.fragment_id: 7
component08_standard.fragment_receiver.board_id: 7
component08_standard.fragment_receiver.starting_fragment_id: 7
component08_standard.fragment_receiver.random_seed: 7738

component09_standard: @local::component_standard
component09_standard.fragment_receiver.fragment_type: TOY2
component09_standard.fragment_receiver.fragment_id: 8
component09_standard.fragment_receiver.board_id: 8
component09_standard.fragment_receiver.starting_fragment_id: 8
component09_standard.fragment_receiver.random_seed: 8738

component10_standard: @local::component_standard
component10_standard.fragment_receiver.fragment_type: TOY2
component10_standard.fragment_receiver.fragment_id: 9
component10_standard.fragment_receiver.board_id: 9
component10_standard.fragment_receiver.starting_fragment_id: 9
component10_standard.fragment_receiver.random_seed: 9738

# baseline BR with lots of fragments per event
component11_standard: @local::component_standard
component11_standard.fragment_receiver.fragment_type: TOY2
component11_standard.fragment_receiver.fragment_id: 10
component11_standard.fragment_receiver.board_id: 10
component11_standard.fragment_receiver.starting_fragment_id: 10
component11_standard.fragment_receiver.random_seed: 10738
component11_standard.fragment_receiver.nADCcounts: 2000
component11_standard.fragment_receiver.max_fragment_size_bytes: 5000
component11_standard.fragment_receiver.usecs_between_sends: 20000
component11_standard.fragment_receiver.timestamp_scale_factor: 1
component11_standard.fragment_receiver.request_window_offset: 500
component11_standard.fragment_receiver.request_window_width: 501
component11_standard.fragment_receiver.request_windows_are_unique: false
component11_standard.fragment_receiver.max_fragment_size_bytes: 2048000

# reduced the ADC counts in the baseline BR with lots of fragments per event
component12_standard: @local::component_standard
component12_standard.fragment_receiver.fragment_type: TOY2
component12_standard.fragment_receiver.fragment_id: 11
component12_standard.fragment_receiver.board_id: 11
component12_standard.fragment_receiver.starting_fragment_id: 11
component12_standard.fragment_receiver.random_seed: 11738
component12_standard.fragment_receiver.nADCcounts: 1000
component12_standard.fragment_receiver.max_fragment_size_bytes: 2000
component12_standard.fragment_receiver.usecs_between_sends: 20000
component12_standard.fragment_receiver.timestamp_scale_factor: 1
component12_standard.fragment_receiver.request_window_offset: 500
component12_standard.fragment_receiver.request_window_width: 501
component12_standard.fragment_receiver.request_windows_are_unique: false
component12_standard.fragment_receiver.max_fragment_size_bytes: 2048000

# reduced More the ADC counts in the baseline BR with lots of fragments per event
component13_standard: @local::component_standard
component13_standard.fragment_receiver.fragment_type: TOY2
component13_standard.fragment_receiver.fragment_id: 12
component13_standard.fragment_receiver.board_id: 12
component13_standard.fragment_receiver.starting_fragment_id: 12
component13_standard.fragment_receiver.random_seed: 12738
component13_standard.fragment_receiver.nADCcounts: 100
component13_standard.fragment_receiver.max_fragment_size_bytes: 196000
component13_standard.fragment_receiver.usecs_between_sends: 20000
component13_standard.fragment_receiver.timestamp_scale_factor: 1
component13_standard.fragment_receiver.request_window_offset: 500
component13_standard.fragment_receiver.request_window_width: 501
component13_standard.fragment_receiver.request_windows_are_unique: false

# reduced MORE the ADC counts in the baseline BR with lots of fragments per event
component14_standard: @local::component_standard
component14_standard.fragment_receiver.fragment_type: TOY2
component14_standard.fragment_receiver.fragment_id: 12
component14_standard.fragment_receiver.board_id: 12
component14_standard.fragment_receiver.starting_fragment_id: 12
component14_standard.fragment_receiver.random_seed: 12738
component14_standard.fragment_receiver.nADCcounts: 10
component14_standard.fragment_receiver.max_fragment_size_bytes: 50000
component14_standard.fragment_receiver.usecs_between_sends: 20000
component14_standard.fragment_receiver.timestamp_scale_factor: 1
component14_standard.fragment_receiver.request_window_offset: 500
component14_standard.fragment_receiver.request_window_width: 501
component14_standard.fragment_receiver.request_windows_are_unique: false

# increased the window size in the baseline BR with lots of fragments per event
component15_standard: @local::component_standard
component15_standard.fragment_receiver.fragment_type: TOY2
component15_standard.fragment_receiver.fragment_id: 14
component15_standard.fragment_receiver.board_id: 14
component15_standard.fragment_receiver.starting_fragment_id: 14
component15_standard.fragment_receiver.random_seed: 14738
component15_standard.fragment_receiver.nADCcounts: 2000
component15_standard.fragment_receiver.max_fragment_size_bytes: 5000
component15_standard.fragment_receiver.usecs_between_sends: 20000
component15_standard.fragment_receiver.timestamp_scale_factor: 1
component15_standard.fragment_receiver.request_window_offset: 1000
component15_standard.fragment_receiver.request_window_width: 1001
component15_standard.fragment_receiver.request_windows_are_unique: false
component15_standard.fragment_receiver.max_fragment_size_bytes: 8192000

# changed windows to unique in the baseline BR with lots of fragments per event
component16_standard: @local::component_standard
component16_standard.fragment_receiver.fragment_type: TOY2
component16_standard.fragment_receiver.fragment_id: 15
component16_standard.fragment_receiver.board_id: 15
component16_standard.fragment_receiver.starting_fragment_id: 15
component16_standard.fragment_receiver.random_seed: 15738
component16_standard.fragment_receiver.nADCcounts: 2000
component16_standard.fragment_receiver.max_fragment_size_bytes: 600000
component16_standard.fragment_receiver.usecs_between_sends: 20000
component16_standard.fragment_receiver.timestamp_scale_factor: 1
component16_standard.fragment_receiver.request_window_offset: 500
component16_standard.fragment_receiver.request_window_width: 501
component16_standard.fragment_receiver.request_windows_are_unique: true

END_PROLOG
