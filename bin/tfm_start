#!/bin/bash
#------------------------------------------------------------------------------
# start Trigger Farm Manager in a given partition - $ARTDAQ_PARTITION_NUMBER
# ARTDAQ_BASE_PORT and ARTDAQ_PORTS_PER_PARTITION are used by artdaq/artdaq/DAQdata/PortManager.cc
# artdaq/artdaq/DAQdata/Globals.hh also uses ARTDAQ_PARTITION_NUMBER
#------------------------------------------------------------------------------
script=$(basename $0)
echo [$script:$LINENO] : $*
echo [$script:$LINENO] : script=$script

source $TFM_DIR/bin/tfm_utils.sh
#------------------------------------------------------------------------------
# -The "nohup" is there so DAQInterface can wind down cleanly if users close its terminal
# -The "stdbuf -oL" is there so that DAQInterface output makes it into the logfile in realtime
# -The "<&-" is there to avoid hangs if users type in the terminal DAQInterface is running in (see Issue #21804)
#------------------------------------------------------------------------------
if [ -n $1 ] ; then 
    if [ -n $TFM_CONFIG_NAME ] ; then 
        # configuration name has been defined 
        if [ $TFM_CONFIG_NAME != $1 ] ; then
            echo WARNING: redefining TFM_CONFIG_NAME from $TFM_CONFIG_NAME to $1
            export TFM_CONFIG_NAME=$1
        fi
    fi
fi

if [ -z $TFM_CONFIG_NAME ] ; then
    echo ERROR: TFM_CONFIG_NAME undefined... BAIL OUT
    return -1
fi

config_name=$TFM_CONFIG_NAME
 config_dir=$TFM_CONFIG_DIR/config_name

export    TFM_PORT=`tfm_port $ARTDAQ_PARTITION_NUMBER`
export TFM_LOGFILE=$TFM_LOGDIR/tfm_partition_`printf %02i $ARTDAQ_PARTITION_NUMBER`.log

logfile=$TFM_LOGFILE
touch $logfile 
echo [$script:$LINENO] : \$TFM_LOGFILE=$TFM_LOGFILE \$TFM_PORT=$TFM_PORT

if [[ -z $( ps aux | grep "$TFM_TTY.*tail -n0 -f $logfile" | grep -v grep ) ]]; then
    tail -n0 -f $logfile &
fi
#------------------------------------------------------------------------------
# when starting a configuration farm, provide the configuration
# 'config_dir' contains all configuration and FCL files
# - settings
# - boot.txt (or .json or .py)
# - FCL files for all executables
# 
# the output is controled by env vars
#------------------------------------------------------------------------------
nohup stdbuf -oL $TFM_DIR/rc/control/farm_manager.py -p $ARTDAQ_PARTITION_NUMBER \
                                                     --rpc-port $TFM_PORT \
                                                     --config-dir=$config_dir
                                                     <&- >> $logfile 2>&1

pid=$( ps aux | grep "$TFM_TTY.*tail -n0 -f $logfile" | grep -v grep | awk '{print $2}' )

if [[ -n $pid ]]; then kill $pid ; fi

unset pid
unset logfile
