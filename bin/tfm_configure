#!/usr/bin/bash
#------------------------------------------------------------------------------
# setup active artdaq configuration : config name and partition
# a "configuration" is a subdirectory with config files in it   
#
# defines env vars, therefore has to be sourced
#
# TFM_CONFIG_DIR : directory containing all configurations (i.e, $MRB_TOP/config)
#                  has to be set in the overall setup script
#
# call signature : source tfm_configure config_name partition [ debug ]
#------------------------------------------------------------------------------
source $TFM_DIR/bin/tfm_utils.sh

function tfm_configure_() {
    local name="tfm_configure"
    local debug=0; 
#------------------------------------------------------------------------------
# do cleanup
#------------------------------------------------------------------------------
    export PATH=$(echo $PATH | sed -r 's!'${TFM_DIR}/bin':*!!')

    unset TFM_LOGDIR
    unset TFM_LOGFILE
    unset TFM_USER_SOURCE_ME_ERRNO
    unset TFM_TTY
    unset TFM_PORT
#------------------------------------------------------------------------------
# proceed 
#------------------------------------------------------------------------------
    export         TFM_CONFIG_NAME=$1
    export ARTDAQ_PARTITION_NUMBER=$2
    if [ ".$3" != "." ] ; then debug=$3 ; fi
    
    export     TFM_FHICL_DIRECTORY=$TFM_CONFIG_DIR
    
    if [ $debug != 0 ] ; then echo [$name:$LINENO] TFM_CONFIG_DIR=$TFM_CONFIG_DIR ; fi

    if [ -z $ARTDAQ_PARTITION_NUMBER ] ; then
        echo call: tfm_configure config_name partition
        return
    fi
#------------------------------------------------------------------------------
# all parameters present
#------------------------------------------------------------------------------
    if [ -n $TFM_VERSION ] ; then echo TFM_VERSION=$TFM_VERSION
                             else echo "TFM not setup, bail out" ; return 1
    fi

#    export TFM_TTY=$(tty | sed -r 's!/dev/!!')
#
#    if ! [[ "$TFM_TTY" =~ pts/[0-9]+ ]]; then
#        cat<<EOF >&2
#WARNING: unable to determine tty. While this will not affect
#actual datataking, any DAQInterface launched in this environment
#may have problems with sending output to a MessageViewer instance
#EOF
# fi
#------------------------------------------------------------------------------
# this is the directory where the FCL files of all configurations reside 
# with the subdirectory per configuration
#------------------------------------------------------------------------------
    export          TFM_SETUP_FHICLCPP=$TFM_CONFIG_DIR/$TFM_CONFIG_NAME/.setup_fhiclcpp

    mf_fcl=messagefacility_partition_${ARTDAQ_PARTITION_NUMBER}_${USER}.fcl
    export ARTDAQ_LOG_FHICL=$DAQ_SCRATCH/$TFM_CONFIG_NAME/tmp_fcl/$mf_fcl
#------------------------------------------------------------------------------
# TFM keeps its own logfiles - in $TFM_LOGDIR/tfm
#------------------------------------------------------------------------------
    local x=`cat $TFM_CONFIG_DIR/$TFM_CONFIG_NAME/settings | grep top_output_dir | sed 's/ //g' | awk -F : '{print $2}'`
    if [ $debug != 0 ] ; then echo [$name:$LINENO] x=$x ; fi
    export  TFM_TOP_OUTPUT_DIR=`eval echo $x`
    export          TFM_LOGDIR=$TFM_TOP_OUTPUT_DIR/logs

    if [ $debug != 0 ] ; then echo [$name:$LINENO] TFM_TOP_OUTPUT_DIR=$TFM_TOP_OUTPUT_DIR ; fi
    if [ $debug != 0 ] ; then echo [$name:$LINENO] TFM_LOGDIR=$TFM_LOGDIR ; fi
    mkdir -p $TFM_LOGDIR
    mkdir -p $TFM_LOGDIR/tfm
#------------------------------------------------------------------------------
# P.M. ARTDAQ_PARTITION_NUMBER is already defined
#------------------------------------------------------------------------------
    if [[ -z $ARTDAQ_BASE_PORT           ]]; then export           ARTDAQ_BASE_PORT=10000 ; fi
    if [[ -z $ARTDAQ_PORTS_PER_PARTITION ]]; then export ARTDAQ_PORTS_PER_PARTITION=1000  ; fi

    export TFM_PORT=`tfm_port $ARTDAQ_PARTITION_NUMBER`  # 10000 + 1000*partition_number

    export PATH=$TFM_DIR/bin:$PATH

    export TFM_PROCESS_MANAGEMENT_METHOD="direct"
    
    if [[ -z $TFM_FHICL_DIRECTORY ]]; then
        export TFM_FHICL_DIRECTORY="$PWD/simple_test_config"
        cat<<EOF
WARNING: the environment variable TFM_FHICL_DIRECTORY hasn't
been defined in $TFM_USER_SOURCE_ME, so we're going to
assume the default configuration area is $TFM_FHICL_DIRECTORY
EOF
fi

    if [[ ! -e $TFM_FHICL_DIRECTORY && $TFM_FHICL_DIRECTORY != "IGNORED" ]]; then cat<<EOF
ERROR: unable to find the FHiCL directory referred to by the
TFM_FHICL_DIRECTORY environment variable,
$TFM_FHICL_DIRECTORY
EOF
        cleanup
        return 1
    fi
#------------------------------------------------------------------------------
# assume 100 partitions is enough
#------------------------------------------------------------------------------
    export TFM_LOGFILE=$TFM_LOGDIR/partition_`printf "%02i" $ARTDAQ_PARTITION_NUMBER`.log
    cat<<EOF

* The TFM environment setup for configuration $TFM_CONFIG_NAME successful. 
* ARTDAQ_PARTITION_NUMBER=$ARTDAQ_PARTITION_NUMBER
* TFM_CONFIG_DIR=$TFM_CONFIG_DIR
* logfiles are located in $TFM_LOGDIR 

EOF
}
#------------------------------------------------------------------------------
# call function
#------------------------------------------------------------------------------
tfm_configure_ $*
